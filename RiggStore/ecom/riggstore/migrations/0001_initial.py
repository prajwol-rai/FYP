# Generated by Django 5.2 on 2025-04-22 17:07

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('rules', models.TextField(blank=True)),
                ('is_public', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'communities',
            },
        ),
        migrations.CreateModel(
            name='EmailVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('otp', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('form_data', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='PrivacyPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('effective_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Privacy Policy',
                'ordering': ['-effective_date'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_name', models.CharField(max_length=50)),
                ('l_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('image', models.ImageField(default='default.jpg', upload_to='profile_pics')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['l_name', 'f_name'],
            },
        ),
        migrations.CreateModel(
            name='CommunityMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('member', 'Member'), ('moderator', 'Moderator')], default='member', max_length=20)),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='riggstore.community')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='riggstore.customer')),
            ],
        ),
        migrations.AddField(
            model_name='community',
            name='admins',
            field=models.ManyToManyField(blank=True, related_name='administered_communities', to='riggstore.customer'),
        ),
        migrations.AddField(
            model_name='community',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_communities', to='riggstore.customer'),
        ),
        migrations.AddField(
            model_name='community',
            name='members',
            field=models.ManyToManyField(blank=True, related_name='joined_communities', to='riggstore.customer'),
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='riggstore.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Developer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('approved', models.BooleanField(default=False)),
                ('khalti_merchant_id', models.CharField(blank=True, max_length=100)),
                ('bank_account_number', models.CharField(blank=True, max_length=50)),
                ('payout_percentage', models.DecimalField(decimal_places=2, default=70.0, max_digits=5)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='riggstore.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('sale_price', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('description', models.CharField(blank=True, max_length=250)),
                ('image', models.ImageField(upload_to='uploads/game/')),
                ('is_on_sale', models.BooleanField(default=False)),
                ('approved', models.BooleanField(default=False)),
                ('categories', models.ManyToManyField(to='riggstore.category')),
                ('developer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='riggstore.developer')),
            ],
        ),
        migrations.CreateModel(
            name='DownloadHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('downloaded_at', models.DateTimeField(auto_now_add=True)),
                ('download_type', models.CharField(choices=[('single', 'Single'), ('batch', 'Batch')], max_length=10)),
                ('visible', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to='riggstore.customer')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='riggstore.game')),
            ],
            options={
                'verbose_name_plural': 'Download Histories',
                'ordering': ['-downloaded_at'],
            },
        ),
        migrations.AddField(
            model_name='community',
            name='game',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='official_community', to='riggstore.game'),
        ),
        migrations.CreateModel(
            name='GameSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('community_name', models.CharField(blank=True, max_length=100, null=True)),
                ('community_description', models.TextField(blank=True, null=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('original_filename', models.CharField(blank=True, max_length=255, null=True)),
                ('game_file', models.FileField(upload_to='uploads/games/')),
                ('thumbnail', models.ImageField(upload_to='uploads/thumbnails/')),
                ('trailer', models.FileField(blank=True, null=True, upload_to='uploads/trailers/')),
                ('version', models.CharField(max_length=20)),
                ('min_os', models.CharField(max_length=50)),
                ('min_processor', models.CharField(max_length=50)),
                ('min_ram', models.CharField(max_length=50)),
                ('min_gpu', models.CharField(max_length=50)),
                ('min_directx', models.CharField(max_length=50)),
                ('rec_os', models.CharField(max_length=50)),
                ('rec_processor', models.CharField(max_length=50)),
                ('rec_ram', models.CharField(max_length=50)),
                ('rec_gpu', models.CharField(max_length=50)),
                ('rec_directx', models.CharField(max_length=50)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('admin_notes', models.TextField(blank=True)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('sale_enabled', models.BooleanField(default=False)),
                ('sale_type', models.CharField(blank=True, choices=[('summer', 'Summer Sale'), ('spring', 'Spring Sale'), ('winter', 'Winter Sale'), ('custom', 'Custom')], max_length=20)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('developer_notes', models.TextField(blank=True)),
                ('categories', models.ManyToManyField(to='riggstore.category')),
                ('developer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='riggstore.developer')),
            ],
        ),
        migrations.CreateModel(
            name='GameScreenshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='screenshots/')),
                ('game_submission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='riggstore.gamesubmission')),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='submission',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='published_game', to='riggstore.gamesubmission'),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_order_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('khalti_pidx', models.CharField(blank=True, max_length=100, null=True)),
                ('khalti_transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='riggstore.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Commission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('developer_payout', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payout_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commissions', to='riggstore.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='riggstore.game')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='riggstore.order')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='games',
            field=models.ManyToManyField(through='riggstore.OrderItem', to='riggstore.game'),
        ),
        migrations.CreateModel(
            name='PaymentDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_session_id', models.CharField(max_length=100)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(max_length=3)),
                ('payment_method', models.CharField(max_length=50)),
                ('receipt_url', models.URLField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment_details', to='riggstore.order')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('image', models.ImageField(blank=True, upload_to='post_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('pinned', models.BooleanField(default=False)),
                ('pinned_at', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='riggstore.customer')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='riggstore.community')),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_posts', to='riggstore.customer')),
                ('pinned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pinned_posts', to='riggstore.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='riggstore.customer')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='riggstore.post')),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='riggstore.cart')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to='riggstore.game')),
            ],
            options={
                'unique_together': {('cart', 'game')},
            },
        ),
    ]
